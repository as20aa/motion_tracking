C51 COMPILER V9.56.0.0   QMC5883                                                           03/13/2018 00:23:06 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE QMC5883
OBJECT MODULE PLACED IN .\Objects\qmc5883.obj
COMPILER INVOKED BY: D:\Software\Keil\C51\BIN\C51.EXE qmc5883.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\qmc5883.lst) TABS(2) OBJECT(.\Objects\qmc5883.obj)

line level    source

   1          #include "qmc5883.h"
   2          
   3          
   4          extern int BUF[8];  //数据缓存
   5          
   6          void Delay_ms(unsigned int t) 
   7          {           
   8   1        unsigned int i,j;       
   9   1        for(i=t;i>0;i--)
  10   1        for(j=121;j>0;j--);           
  11   1      }
  12          void Delay_5us()
  13          {
  14   1        _nop_();_nop_();_nop_();_nop_();
  15   1        _nop_();_nop_();_nop_();_nop_();
  16   1        _nop_();_nop_();_nop_();_nop_();
  17   1        _nop_();_nop_();_nop_();_nop_();
  18   1        _nop_();_nop_();_nop_();_nop_();
  19   1        _nop_();_nop_();_nop_();_nop_();
  20   1        _nop_();_nop_();_nop_();_nop_();
  21   1        _nop_();_nop_();_nop_();_nop_();
  22   1      }
  23          /**************************************
  24          起始信号
  25          **************************************/
  26          void QMC5883_Start()
  27          {
  28   1          SDA = 1;                    //拉高数据线
  29   1          SCL = 1;                    //拉高时钟线
  30   1          Delay_5us();                 //延时
  31   1          SDA = 0;                    //产生下降沿
  32   1          Delay_5us();                 //延时
  33   1          SCL = 0;                    //拉低时钟线
  34   1      }
  35          
  36          /**************************************
  37          停止信号
  38          **************************************/
  39          void QMC5883_Stop()
  40          {
  41   1          SDA = 0;                    //拉低数据线
  42   1          SCL = 1;                    //拉高时钟线
  43   1          Delay_5us();                 //延时
  44   1          SDA = 1;                    //产生上升沿
  45   1          Delay_5us();                 //延时
  46   1      }
  47          
  48          /**************************************
  49          发送应答信号
  50          入口参数:ack (0:ACK 1:NAK)
  51          **************************************/
  52          void QMC5883_SendACK(bit ack)
  53          {
  54   1          SDA = ack;                  //写应答信号
C51 COMPILER V9.56.0.0   QMC5883                                                           03/13/2018 00:23:06 PAGE 2   

  55   1          SCL = 1;                    //拉高时钟线
  56   1          Delay_5us();                 //延时
  57   1          SCL = 0;                    //拉低时钟线
  58   1          Delay_5us();                 //延时
  59   1      }
  60          
  61          /**************************************
  62          接收应答信号
  63          **************************************/
  64          bit QMC5883_RecvACK()
  65          {
  66   1          SCL = 1;                    //拉高时钟线
  67   1          Delay_5us();                //延时
  68   1          CY = SDA;                   //进位标志 读应答信号
  69   1          SCL = 0;                    //拉低时钟线
  70   1          Delay_5us();                //延时
  71   1          return CY;
  72   1      }
  73          
  74          /**************************************
  75          向IIC总线发送一个字节数据
  76          **************************************/
  77          void QMC5883_SendByte(int dat)
  78          {
  79   1          int i;
  80   1      
  81   1          for (i=0; i<8; i++)         //8位计数器
  82   1          {
  83   2              dat <<= 1;              //移出数据的最高位
  84   2              SDA = CY;               //送数据口
  85   2              SCL = 1;                //拉高时钟线
  86   2              Delay_5us();             //延时
  87   2              SCL = 0;                //拉低时钟线
  88   2              Delay_5us();             //延时
  89   2          }
  90   1          QMC5883_RecvACK();
  91   1      }
  92          
  93          /**************************************
  94          从IIC总线接收一个字节数据
  95          **************************************/
  96          unsigned int QMC5883_RecvByte()
  97          {
  98   1          int i;
  99   1          int dat = 0;
 100   1      
 101   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 102   1          for (i=0; i<8; i++)         //8位计数器
 103   1          {
 104   2              dat <<= 1;
 105   2              SCL = 1;                //拉高时钟线
 106   2              Delay_5us();             //延时
 107   2              dat |= SDA;             //读数据               
 108   2              SCL = 0;                //拉低时钟线
 109   2              Delay_5us();             //延时
 110   2          }
 111   1          return dat;
 112   1      }
 113          
 114          //************************写入单字节数据***************************
 115          
 116          void Single_Write_QMC5883(int REG_Address,int REG_data)
C51 COMPILER V9.56.0.0   QMC5883                                                           03/13/2018 00:23:06 PAGE 3   

 117          {
 118   1          QMC5883_Start();                  //起始信号
 119   1        //此处的Slave_Address是在主函数总有定义的，但是在这个子函数中有出现，且不用声明，即只要在主函数中声明过一
             -次就是对函数可见的
 120   1          QMC5883_SendByte(Slave_Address);   //发送设备地址+写信号
 121   1          QMC5883_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf 
 122   1          QMC5883_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf
 123   1          QMC5883_Stop();                   //发送停止信号
 124   1      }
 125          
 126          //************************读取单字节数据*************************
 127          //u8 Single_Read_QMC5883(u8 REG_Address)
 128          //{   
 129          //  u8 REG_data;
 130          //  QMC5883_Start();                          //起始信号
 131          //  QMC5883_SendByte(Slave_Address);           //发送设备地址+写信号
 132          //  QMC5883_SendByte(REG_Address);            //发送存储单元地址，从0开始 
 133          //  QMC5883_Start();                          //起始信号
 134          //  QMC5883_SendByte(Slave_Address+1);         //发送设备地址+读信号
 135          //  REG_data=QMC5883_RecvByte();              //读出寄存器数据
 136          //  QMC5883_SendACK(1);   
 137          //  QMC5883_Stop();                           //停止信号
 138          //  return REG_data; 
 139          //}
 140          
 141          //******************************************************
 142          //连续读出QMC5883内部角度数据，地址范围0x00~0x05
 143          //******************************************************
 144          void Multiple_Read_QMC5883()
 145          {   
 146   1          int i;
 147   1          QMC5883_Start();                          //起始信号
 148   1          QMC5883_SendByte(Slave_Address);          //发送设备地址+写信号
 149   1          QMC5883_SendByte(0x00);                   //发送存储单元地址，从0x00开始  
 150   1          QMC5883_Start();                          //起始信号
 151   1          QMC5883_SendByte(Slave_Address+1);        //发送设备地址+读信号
 152   1         for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 153   1          {
 154   2              BUF[i] = QMC5883_RecvByte();          //BUF[0]存储数据
 155   2              if (i == 5)
 156   2              {
 157   3                 QMC5883_SendACK(1);                //最后一个数据需要回非应答NOACK
 158   3              }
 159   2              else
 160   2              {
 161   3                QMC5883_SendACK(0);                 //应答ACK
 162   3             }
 163   2         }
 164   1          QMC5883_Stop();                           //停止信号
 165   1          Delay_ms(5);
 166   1      }
 167          
 168          //初始化QMC5883，根据需要请参考pdf进行修改****
 169          void Init_QMC5883()
 170          {
 171   1      
 172   1        Single_Write_QMC5883(0x09,0x0d);  //控制寄存器配置
 173   1        Single_Write_QMC5883(0x0b,0x01);  //设置清除时间寄存器
 174   1        Single_Write_QMC5883(0x20,0x40);  //
 175   1        Single_Write_QMC5883(0x21,0x01);  //  
 176   1      }
 177          
C51 COMPILER V9.56.0.0   QMC5883                                                           03/13/2018 00:23:06 PAGE 4   

 178          
 179          
 180          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    342    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
